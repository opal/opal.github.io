Opal.queue(function(Opal) {/* Generated by Opal 1.8.1 */
  var $module = Opal.module, $slice = Opal.slice, $def = Opal.def, $nesting = [], nil = Opal.nil;

  Opal.add_stubs('new');
  return (function($base, $parent_nesting) {
    var self = $module($base, 'AST');

    var $nesting = [self].concat($parent_nesting);

    return (function($base, $parent_nesting) {
      var self = $module($base, 'Sexp');

      var $nesting = [self].concat($parent_nesting), $$ = Opal.$r($nesting);

      return $def(self, '$s', function $$s(type, $a) {
        var $post_args, children;

        
        $post_args = $slice(arguments, 1);
        children = $post_args;
        return $$('Node').$new(type, children);
      }, -2)
    })($nesting[0], $nesting)
  })($nesting[0], $nesting)
});
