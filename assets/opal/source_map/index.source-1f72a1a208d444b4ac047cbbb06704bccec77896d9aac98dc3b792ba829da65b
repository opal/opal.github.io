Opal.queue(function(Opal) {/* Generated by Opal 1.8.1 */
  var $klass = Opal.klass, $ensure_kwargs = Opal.ensure_kwargs, $hash_get = Opal.hash_get, $def = Opal.def, $send = Opal.send, $truthy = Opal.truthy, $rb_plus = Opal.rb_plus, $nesting = [], $$ = Opal.$r($nesting), nil = Opal.nil, $$$ = Opal.$$$;

  Opal.add_stubs('include,attr_reader,map,to_h,generated_code,+,count,[],rindex,size');
  return (function($base, $super, $parent_nesting) {
    var self = $klass($base, $super, 'Index');

    var $nesting = [self].concat($parent_nesting), $$ = Opal.$r($nesting), $proto = self.$$prototype;

    $proto.source_maps = nil;
    
    self.$include($$$($$$($$('Opal'), 'SourceMap'), 'Map'));
    self.$attr_reader("source_maps");
    
    $def(self, '$initialize', function $$initialize(source_maps, $kwargs) {
      var join, self = this;

      
      $kwargs = $ensure_kwargs($kwargs);
      
      join = $hash_get($kwargs, "join");if (join == null) join = nil;
      self.source_maps = source_maps;
      return (self.join = join);
    }, -2);
    return $def(self, '$map', function $$map() {
      var self = this, offset_line = nil, offset_column = nil;

      
      offset_line = 0;
      offset_column = 0;
      return (new Map([["version", 3], ["sections", $send(self.source_maps, 'map', [], function $$1(source_map){var self = $$1.$$s == null ? this : $$1.$$s, map = nil, generated_code = nil, new_lines_count = nil, last_line = nil;
        if (self.join == null) self.join = nil;

        
        if (source_map == null) source_map = nil;
        map = (new Map([["offset", (new Map([["line", offset_line], ["column", offset_column]]))], ["map", source_map.$to_h()]]));
        generated_code = source_map.$generated_code();
        if ($truthy(self.join)) {
          generated_code = $rb_plus(generated_code, self.join)
        };
        new_lines_count = generated_code.$count("\n");
        last_line = generated_code['$[]'](Opal.Range.$new($rb_plus(generated_code.$rindex("\n"), 1), -1, false));
        offset_line = $rb_plus(offset_line, new_lines_count);
        offset_column = $rb_plus(offset_column, last_line.$size());
        return map;}, {$$s: self})]]));
    });
  })($$$($$('Opal'), 'SourceMap'), null, $nesting)
});
